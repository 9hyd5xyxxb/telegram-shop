name: NodeJS with Webpack

on:
  push:
    branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

jobs:
  install-nx:
    name: Install Nx
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci
    - name: Build apps
      run: npm run build
    - name: Zip artifact
      run: zip archive -@ -r <<EOF
        /home/runner/work/telegram-shop/telegram-shop/node_modules/
        /home/runner/work/telegram-shop/telegram-shop/build/
        /home/runner/work/telegram-shop/telegram-shop/package.json
        /home/runner/work/telegram-shop/telegram-shop/package-lock.json
        EOF

    - uses: actions/upload-artifact@master
      with:
        name: archive
        path: /home/runner/work/telegram-shop/telegram-shop/archive.zip

  build-container:
    name: Build apps containers
    needs: install-nx
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build-coomand: ["shop-backend", "shop-frontend"]

    steps:
    - uses: actions/download-artifact@master
      with:
        name: archive
        path: /home/runner/work/telegram-shop/telegram-shop/archive.zip
    - name: Unzip artifact
      run: unzip /home/runner/work/telegram-shop/telegram-shop/archive.zip /home/runner/work/telegram-shop/telegram-shop/
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GIT_TOKEN }}

    -
      name: Build
      run: ./node_modules/.bin/nx run ${{ matrix.build-coomand }}:push-container
